Microprocessor vs microcontroller: just cpu is microprocessor and cpu with other periferal devices like i/o port,RAM, 
ROM, timer, counter, Interrupt controller is microcontroller or microcomputer.
Counter vs timer: Timer counts clockcycle whereas counter keep track of events.In 8155 timer decrement with each clockcycle.
word size: The processing capacity of ALU.(8-bit for 8085)
1 byte has two nibbles: lower and heigher
Machines code: Binary code that the processor understands.
Assembly code has Mnemonics. These are 3-4 letters english code. Assembly code has direct relationship with machine code. 
The biggest advantage of this is it is processor specific.
High level languages: It is converted to machine code using interpretor(python) or compiler(C/C++).
Control registers: Settings for the processor.
for selectively reset control register we use and operation.
ISR: Interrupt service routine; subroutine specially meant for interrupts.
EI: enable interrupt; two cases 1. when reset 2. when you come out of ISR.
NMI: non maskable interrupt (TRAP) 
HLT: compiler won't read beyond this point (STOP execution).It's a assembler director.
MMIO: memory mapped Input output (8085). IO is also mapped/ looks like memory address.So any instruction that we use for memory can also use for IO.
eg: STA (add_16-bit); LDA(add_16-bit); MOV M,A; We generate MEMR(Active low) and MEMW(active low) for these control signal insted of IOR and IOW.
Limitation of IO over MIMO is that no operations can be done on IN and OUT data. IO is limited to accumulator.
some addresses are mapped for memory and some addresses for address.
IN p: address bus is 16 bit in 8085 and p is a 8-bit address, generally address is split into two, 
lower address and higher address;so here p address is present for both Lower and higher order addresses. 
And only the lower byte helps in denoting a particular addresses.
LDA: load data into acc
LDAX B: compiler will go to address contained in BC register and load the value on that address to A.
LHLD a: put content present at a address to L and a++ addess in H.
NOP: No operations; for one machine cycle, buses and registers hold their value, they don't change.
Used to adjust timing, when we are working with slower periferal devices.
The main purpose of OR is to selectively set bits; AND helps you selectively reset bits.
OUT p: IN and OUT select the device present at p address and here A content is put in data bus and transfer to output device.
PSW: program status word: (A+Flags); PUSH PSW:A will be loaded at the higher address and flags at lower.
PUSH and POP: ISR and when running out of registers.
Machine cycle:time taken for one meaningful operation.
Buffer:for long interconnect,buffer boost the signal without changing it(copy). One input and one enable.
Two types inverter(Not with an enable) and buffer(back to back inverter;copy with boost the signal).
Three states in a buffer(0/1/Z).
Decoder selects one of the devices. so chip enable usually comes from the decoder.
Partial order decoding: Multiple address points to same address location.i.e, there are some floating address lines.
For input: there is a tristate buffer and through the tristate buffer any input will come. 
for output: there is a lathch and output of the latch is connected to any output device.
OPcode fetch is a memory operation; Need to read from the memory.
All the instructions except push,jump,call,RNC and return has 4T Opcode.
IN ABH has 3MC and 10Tstates. Here ABH is issued by the processor. And only then data is transfer from input device.Thah's why MC are OPcode+MR+IOR.
In case of OUT ABH the only change in MC is instead of IOR there would be IOW.ALso here the data that is in the accumulator will go to output.
ISR: Interrupt service routine. It is also called Interrupt controller. In modern day processor it is called exceptions.
Exceptions include interrupt alog with some extra things.
Preemption:low priority interrupt can be interrupted by high proiority interrupt.It's not there in 8085.
RST0 to 7 are reset instruction used for debugging during test-phase. They are not interrupt.
The interrupt RST 7.5,6.5,5.5 are interrupt whose address are sit betwwern these instrucion.
Terminal count: when the timer hits zero and it goes back.
Asynchronous: Independent of clock.
Bit rate vs Baud rate:Bit rate is only data rate whereas baud rate also includes control bits.
Baud rate is the rate of data transfer and control bits that transmitter and reciver is agree to and so it is known priore.
Frame: It contains start bit, data bits, stop bits and may be some extra bits decided priore.
simplex: one side transmission.
half duplex: can transmite both side but not at the same time.
full duplex: transmission of data occure both side(Tx to Rx & Rx to Tx) at the same time.
No UART is there in 8085 so we kind of mimic UART.
Delay in UART=1/(baud rate)
SDE: serial data enable, for transmission of data this bit must be 1 in SIM register.
XRA A: accumulator and carry flag is flushed.
Interrupt controller: small execution unit that is going to poll all the interrupt and hold signal in case of SOC.
SOC: system on chip.
INTR is non vectered, maskable and lowest priority interrupt. ANd it's ISR address would be one of the RST instrucion given by user with the help of tristate buffer.
RST has S,W,W machine cycles. When INTR is using RST so insted of RD(active low) in special opcode fetch machine cycle, there would be INTA(active low).And in opcode fetch(int special opcode fetch machine cycle), opcode of RST will be fetched.
TRAP is not capured anywhere inside meaning it will be high untill it is detected.It is edge(rising edge) triggered.
RST 7.5 is also edge triggered but it is captured inside a FF so it can go low after short period of time.